// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Type {
  id         BigInt      @id @default(autoincrement())
  name       String      @db.Char(255)
  createdAt  DateTime    @map("created_at")
  createdBy  String      @map("created_by") @db.Char(255)
  updatedAt  DateTime    @map("updated_at")
  updatedBy  String      @map("updated_by") @db.Char(255)
  challenges Challenge[]
}

model Category {
  id         BigInt      @id @default(autoincrement())
  title      String      @db.Char(255)
  startDate  DateTime    @map("start_date")
  endDate    DateTime    @map("end_date")
  achivement String      @db.Char(255)
  punishment String      @db.Char(255)
  createdAt  DateTime    @map("created_at")
  createdBy  String      @map("created_by") @db.Char(255)
  updatedAt  DateTime    @map("updated_at")
  updatedBy  String      @map("updated_by") @db.Char(255)
  challenges Challenge[]
}

model Challenge {
  id          BigInt          @id @default(autoincrement())
  challenge   String          @db.Char(255)
  description String
  categoryId  BigInt          @map("category_id")
  typeId      BigInt          @map("type_id")
  createdAt   DateTime        @map("created_at")
  createdBy   String          @map("created_by") @db.Char(255)
  updatedAt   DateTime        @map("updated_at")
  updatedBy   String          @map("updated_by") @db.Char(255)
  category    Category        @relation(fields: [categoryId], references: [id])
  type        Type            @relation(fields: [typeId], references: [id])
  users       UserChallenge[]
}

model User {
  id           BigInt          @id @default(autoincrement())
  name         String          @db.Char(255)
  userName     String          @map("user_name") @db.Char(255)
  password     String
  photoUrl     String          @map("photo_url")
  createdAt    DateTime        @map("created_at")
  updatedAt    DateTime        @map("updated_at")
  userChallenge UserChallenge[]
}

model UserChallenge {
  userId      BigInt    @map("user_di")
  challengeId BigInt    @map("challenge_id")
  isDone      Int       @map("is_done") @db.SmallInt() @default(0)
  user        User      @relation(fields: [userId], references: [id])
  challenge   Challenge @relation(fields: [challengeId], references: [id])

  @@id([userId, challengeId])
}
